[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\DREHEREN20\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\DREHEREN20\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Oracle Corporation Java 19.0.1)
[debug]       Load.loadUnit: plugins took 232.1495ms
[debug]       Load.loadUnit: defsScala took 0.6522ms
[debug] [Loading] Scanning directory C:\Users\DREHEREN20\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\DREHEREN20\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 44.3756 ms
[debug]           Load.resolveProject(global-plugins) took 104.9363ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\DREHEREN20\.sbt\1.0\plugins, plugins: List(<none>))) took 206.0227ms
[debug] [Loading] Done in C:\Users\DREHEREN20\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 260.914ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.479ms
[debug]     Load.loadUnit(file:/C:/Users/DREHEREN20/.sbt/1.0/plugins/, ...) took 520.525ms
[debug]   Load.apply: load took 970.6536ms
[debug]   Load.apply: resolveProjects took 19.532ms
[debug]   Load.apply: finalTransforms took 150.3125ms
[debug]   Load.apply: config.delegates took 16.0356ms
[debug]   Load.apply: Def.make(settings)... took 1307.9247ms
[debug]   Load.apply: structureIndex took 274.2794ms
[debug]   Load.apply: mkStreams took 3.7887ms
[info] loading global plugins from C:\Users\DREHEREN20\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5939.6874ms
[debug]           Load.loadUnit: plugins took 63.1637ms
[debug]           Load.loadUnit: defsScala took 0.0138ms
[debug] [Loading] Scanning directory C:\Users\DREHEREN20\OneDrive - Grove City College\Desktop\Stuff\school\GitHub\ScalaMath\ScalaMath\project
[debug]             Load.loadUnit: mkEval took 13.1176ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\DREHEREN20\OneDrive - Grove City College\Desktop\Stuff\school\GitHub\ScalaMath\ScalaMath\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.0338 ms
[info] loading settings for project scalamath-build from idea1.sbt ...
[debug]               Load.resolveProject(scalamath-build) took 14.0839ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scalamath-build, base: C:\Users\DREHEREN20\OneDrive - Grove City College\Desktop\Stuff\school\GitHub\ScalaMath\ScalaMath\project, plugins: List(<none>))) took 19.3517ms
[debug] [Loading] Done in C:\Users\DREHEREN20\OneDrive - Grove City College\Desktop\Stuff\school\GitHub\ScalaMath\ScalaMath\project, returning: (scalamath-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 7878.9268ms
[debug]           Load.loadUnit: cleanEvalClasses took 23.8336ms
[debug]         Load.loadUnit(file:/C:/Users/DREHEREN20/OneDrive%20-%20Grove%20City%20College/Desktop/Stuff/school/GitHub/ScalaMath/ScalaMath/project/, ...) took 7970.3693ms
[debug]       Load.apply: load took 7975.9633ms
[debug]       Load.apply: resolveProjects took 0.2324ms
[debug]       Load.apply: finalTransforms took 24.8116ms
[debug]       Load.apply: config.delegates took 1.1301ms
[debug]       Load.apply: Def.make(settings)... took 888.1876ms
[debug]       Load.apply: structureIndex took 276.2978ms
[debug]       Load.apply: mkStreams took 0.0037ms
[info] loading project definition from C:\Users\DREHEREN20\OneDrive - Grove City College\Desktop\Stuff\school\GitHub\ScalaMath\ScalaMath\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 13331.2614ms
[debug]     Load.loadUnit: defsScala took 0.0051ms
[debug] [Loading] Scanning directory C:\Users\DREHEREN20\OneDrive - Grove City College\Desktop\Stuff\school\GitHub\ScalaMath\ScalaMath
[debug]       Load.loadUnit: mkEval took 0.4089ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 6.0434 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 47.9727ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\DREHEREN20\OneDrive - Grove City College\Desktop\Stuff\school\GitHub\ScalaMath\ScalaMath, plugins: List(<none>))) took 57.3519ms
[debug] [Loading] Done in C:\Users\DREHEREN20\OneDrive - Grove City College\Desktop\Stuff\school\GitHub\ScalaMath\ScalaMath, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2563.568ms
[debug]     Load.loadUnit: cleanEvalClasses took 40.8298ms
[debug]   Load.loadUnit(file:/C:/Users/DREHEREN20/OneDrive%20-%20Grove%20City%20College/Desktop/Stuff/school/GitHub/ScalaMath/ScalaMath/, ...) took 15938.0478ms
[debug] Load.apply: load took 15945.3529ms
[debug] Load.apply: resolveProjects took 0.3492ms
[debug] Load.apply: finalTransforms took 51.2062ms
[debug] Load.apply: config.delegates took 0.5748ms
[debug] Load.apply: Def.make(settings)... took 119.2846ms
[debug] Load.apply: structureIndex took 45.7117ms
[debug] Load.apply: mkStreams took 0.0037ms
[info] set current project to ScalaMath (in build file:/C:/Users/DREHEREN20/OneDrive%20-%20Grove%20City%20College/Desktop/Stuff/school/GitHub/ScalaMath/ScalaMath/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 55112 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 55112, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to ScalaMath (in build file:/C:/Users/DREHEREN20/OneDrive%20-%20Grove%20City%20College/Desktop/Stuff/school/GitHub/ScalaMath/ScalaMath/)
[debug] > Exec(idea-shell, None, None)
